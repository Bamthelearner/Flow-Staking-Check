{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benh6\\\\Documents\\\\GitHub\\\\Flow-Staking-Check\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport * as fcl from \"@onflow/fcl\"; //import * as types from \"@onflow/types\";\n\nimport { useState } from 'react';\nimport { checkscript } from \"./cadence/code.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfcl.config().put(\"accessNode.api\", \"https://access-mainnet-beta.onflow.org\").put(\"discovery.wallet\", \"https://fcl-discovery.onflow.org/authn\");\n\nfunction App() {\n  _s();\n\n  const [scriptResult, setScriptResult] = useState([]);\n\n  const view = async () => {\n    const result = await fcl.send([fcl.script(checkscript), fcl.args([])]).then(fcl.decode);\n    console.log(result);\n    setScriptResult(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Flow Staking Service Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => view(),\n        children: \"Check the status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Status : \", scriptResult.toString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CxNvnh/6NJjKFwf+8t98fCrRxDU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/benh6/Documents/GitHub/Flow-Staking-Check/src/App.js"],"names":["fcl","useState","checkscript","config","put","App","scriptResult","setScriptResult","view","result","send","script","args","then","decode","console","log","toString"],"mappings":";;;AAAA,OAAO,WAAP;AAEA,OAAO,KAAKA,GAAZ,MAAqB,aAArB,C,CACA;;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,mBAA5B;;AAKAF,GAAG,CAACG,MAAJ,GACGC,GADH,CACO,gBADP,EACyB,wCADzB,EAEGA,GAFH,CAEO,kBAFP,EAE2B,wCAF3B;;AAIA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;;AAGA,QAAMO,IAAI,GAAG,YAAY;AACvB,UAAMC,MAAM,GAAG,MAAMT,GAAG,CAACU,IAAJ,CAAS,CAC5BV,GAAG,CAACW,MAAJ,CAAWT,WAAX,CAD4B,EAE5BF,GAAG,CAACY,IAAJ,CAAS,EAAT,CAF4B,CAAT,EAIlBC,IAJkB,CAIbb,GAAG,CAACc,MAJS,CAArB;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAF,IAAAA,eAAe,CAACE,MAAD,CAAf;AAED,GAVD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMD,IAAI,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCAAcF,YAAY,CAACW,QAAb,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAlCQZ,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import './App.css';\r\n\r\nimport * as fcl from \"@onflow/fcl\";\r\n//import * as types from \"@onflow/types\";\r\nimport {useState} from 'react';\r\nimport { checkscript } from \"./cadence/code.js\";\r\n\r\n\r\n\r\n\r\nfcl.config()\r\n  .put(\"accessNode.api\", \"https://access-mainnet-beta.onflow.org\")\r\n  .put(\"discovery.wallet\", \"https://fcl-discovery.onflow.org/authn\")\r\n\r\nfunction App() {\r\n\r\n  const [scriptResult, setScriptResult] = useState([]);\r\n\r\n\r\n  const view = async () => {\r\n    const result = await fcl.send([\r\n      fcl.script(checkscript),\r\n      fcl.args([\r\n      ])\r\n    ]).then(fcl.decode);\r\n\r\n    console.log(result);\r\n    setScriptResult(result);\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <h2>Flow Staking Service Status</h2>\r\n      </div>\r\n      <div>\r\n        <button onClick={() => view()}>Check the status</button>\r\n        <h2>Status : {scriptResult.toString()}</h2>\r\n\r\n      </div>\r\n\r\n        \r\n   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}